package com.robwettach.webdiplomacy.notify;

import static java.util.stream.Collectors.toList;

import com.google.common.collect.ImmutableList;
import java.util.List;

/**
 * Checks diffs and sends notifications for a single game.
 *
 * <p>Configures multiple {@link DiffChecker diff checkers} including:
 * <ul>
 *     <li>{@link PhaseChecker}</li>
 *     <li>{@link HourRemainingChecker}</li>
 *     <li>{@link PausedChecker}</li>
 *     <li>{@link OrderChecker}</li>
 *     <li>{@link DefeatedChecker}</li>
 *     <li>{@link VoteChecker}</li>
 * </ul>
 */
public class GameNotifications {
    private final Notifier notifier;

    private final List<DiffChecker> checkers = ImmutableList.of(
            new PhaseChecker(),
            new HourRemainingChecker(),
            new PausedChecker(),
            new OrderChecker(),
            new DefeatedChecker(),
            new VoteChecker(),
            new FinishedChecker());

    public GameNotifications(Notifier notifier) {
        this.notifier = notifier;
    }

    /**
     * Update all of the {@link DiffChecker diff checkers}, but do not
     * send notifications to the configured {@link #notifier Notifier}.
     *
     * @param previous The previous game state
     * @param current The latest game state
     * @return The list of {@link Diff}s generated by all of the checkers
     */
    public List<Diff> updateSilently(Snapshot previous, Snapshot current) {
        return checkers.stream()
                .flatMap(c -> c.check(previous, current).stream())
                .collect(toList());
    }

    /**
     * Update all of the {@link DiffChecker diff checkers}, sending
     * notifications to the configured {@link #notifier Notifier}.
     *
     * @param previous The previous game state
     * @param current The latest game state
     * @return The list of {@link Diff}s generated by all of the checkers
     */
    public List<Diff> updateAndNotify(Snapshot previous, Snapshot current) {
        List<Diff> diffs = updateSilently(previous, current);
        notifier.notify(diffs);
        return diffs;
    }
}
